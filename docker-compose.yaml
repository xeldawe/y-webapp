services:
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=petstore'
      - 'POSTGRES_PASSWORD=meow'
      - 'POSTGRES_USER=pet'
    ports:
      - 7000:5432

  redis:
    image: 'redis:latest'
    ports:
      - 6379:6379

  backend:
    build:
      context: .
    depends_on:
      - postgres
      - redis
    ports:
      - 8080:8081
      - 8091:8988
      - 8092:8989
    environment:
      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/petstore'
      - 'SPRING_DATASOURCE_USERNAME=pet'
      - 'SPRING_DATASOURCE_PASSWORD=meow'
      - 'SPRING_DATA_REDIS_HOST=redis'
      - 'SPRING_DATA_REDIS_PORT=6379'
      - 'API_KEY=${API_KEY}'
      - 'FILTER_INTERVAL=${FILTER_INTERVAL}'
    env_file:
      - ./global.env
      - ./API_KEY.env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - API_KEY=${API_KEY}
        - FILTER_INTERVAL=${FILTER_INTERVAL}
        - API_URL=${API_URL}
    environment:
      - 'API_KEY=${API_KEY}'
      - 'FILTER_INTERVAL=${FILTER_INTERVAL}'
      - 'API_URL=${API_URL}'
    depends_on:
      - backend
    ports:
      - 4200:4000
    env_file:
      - ./global.env
      - ./API_KEY.env

  music-app:
    build:
      context: ./integration-developer-master
    ports:
      - 8180:3000
    networks:
      webapp_webnet:
        ipv4_address: 172.22.0.3
    depends_on:
      mysql:
        condition: service_healthy
    restart: on-failure
    environment:
      MYSQL_USER: test
      MYSQL_PASSWORD: testpw
      MYSQL_DATABASE: music
      MYSQL_HOST: 172.22.0.2
      MYSQL_PORT: 3306

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: AsDas!27d
      MYSQL_DATABASE: music
      MYSQL_USER: test
      MYSQL_PASSWORD: testpw
    ports:
      - "3306:3306"
    networks:
      webapp_webnet:
        ipv4_address: 172.22.0.2
    volumes:
      - ./my.cnf:/etc/my.cnf
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8190:8080"
    environment:
      SWAGGER_JSON: /app/openapi.yaml
      ALLOW_CORS: "false"
    volumes:
      - ./music-app.yaml:/app/openapi.yaml
        
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8100:80"
    depends_on:
      - music-app
    networks:
      - webapp_webnet

networks:
  webapp_webnet:
    external: true